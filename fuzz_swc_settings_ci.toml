[general]
loop_number = 5000 # How much creating/removing/checking steps will be executed
broken_files_for_each_file = 10# Number of broken files that will be created for each 1 valid file
minimize_output = true # Tries to remove some lines from output file, remember, that not always minimized file will produce same error - usually minimize output 2-100 times
temp_possible_broken_files_dir = "/opt/POSSIBLY_BROKEN_FILES_DIR" # Place where possibly broken files are saved
minimization_attempts = 3000 # Attemps to minimize code, counter reset when found minimized test case
minimization_attempts_with_signal_timeout = 10 # Usually signal is sended by OOM killer or timeout which is slow to reproduce and minimize, so use it less amount than normal
debug_print_results = false # Debug prints output of commands
debug_executed_commands = false # Debug prints executed commands
debug_print_broken_files_creator = false # Debug prints results of command that created broken files
remove_non_crashing_items_from_broken_files = false # Special mode to remove non crashing files from broken files - useful if some of files were fixed in new version of app
find_minimal_rules = false # If true, will try to find minimal rules that will produce error, files will be taken from BROKEN_FILES_DIR
temp_folder = "TMP_FOLDER_TO_REPLACE" # Temp file used to store random data
timeout = 100 # timeout time, if equal zero, then timeout is disabled - CAUTION - it is also used with grouping, which can a lot of easily exceed this time
allowed_error_statuses = "0,1,2,101" # Treat file as broken if exit code is different than 0 or 1 (this is sometimes )
ignore_timeout_errors = false
error_when_found_signal = true # Errors, when app was killed by OS or user
max_collected_files = 1000000000 # Max number of files that will be collected from valid_input_files_dir
check_if_file_is_parsable = false #true # If true, will check if file is parsable, if not, then will be removed
grouping = 4000 # How many files will be grouped in one command - using bigger number than 1 will add additional step, with checking multiple files in one command

current_mode = "custom"

[custom]
command = "swc|compile|FILE_PATHS_TO_PROVIDE"

extensions = "ts,js,mjs,mts"
valid_input_files_dir = "/opt/VALID_FILES_DIR"
broken_files_dir = "/opt/BROKEN_FILES_DIR"
group_mode = "by_group" # available: none, by_files, by_group

search_item_1 = "RUST_BACKTRACE"
search_item_2 = "panicked at"
ignored_item_1 = "crates/swc_ecma_compat_es2015/src/destructuring.rs:1165:44"
ignored_item_2 = "crates/swc_common/src/source_map.rs:662:60"
ignored_item_3 = "crates/swc_ecma_compat_es2021/src/logical_assignments.rs:155:50"
ignored_item_4 = "crates/swc_ecma_compat_es2015/src/destructuring.rs:409:52"
ignored_item_5 = "crates/swc_ecma_compat_es2022/src/class_properties/mod.rs:959:21"
ignored_item_6 = "crates/swc_ecma_transforms_typescript/src/transform.rs:265:18"
ignored_item_7 = "crates/swc_ecma_compat_es2022/src/class_properties/mod.rs:972:21"
ignored_item_8 = "crates/swc_ecma_compat_es2015/src/destructuring.rs:418:52"
ignored_item_10 = "crates/swc_ecma_compat_es2021/src/logical_assignments.rs:158:50"
ignored_item_11 = "crates/swc_ecma_compat_es2015/src/destructuring.rs:418:52"
ignored_item_12 = "crates/swc_ecma_compat_es2022/src/class_properties/mod.rs:972:21"
ignored_item_9 = "timeout: the monitored command dumped core"
file_type = "js" # Available: text, binary, js, go, rust, lua

