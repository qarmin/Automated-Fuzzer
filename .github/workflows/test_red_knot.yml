name: üêß Red knot
on:
  #  push:
  #  pull_request:
  schedule:
    - cron: '0 21 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  red-knot-ci:

    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: RED_KNOT_0
            timeout: 300
          - name: RED_KNOT_1
            timeout: 600
          - name: RED_KNOT_2
            timeout: 1800
          - name: RED_KNOT_3
            timeout: 3600
          - name: RED_KNOT_4
            timeout: 7200
          - name: RED_KNOT_5
            timeout: 18000
          - name: RED_KNOT_6
            timeout: 18000
          - name: RED_KNOT_7
            timeout: 18000
          - name: RED_KNOT_8
            timeout: 18000
          - name: RED_KNOT_9
            timeout: 18000
          - name: RED_KNOT_10
            timeout: 18000

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y wget

      - name: Install sd and others
        run: |
          mkdir -p ~/.cargo/bin
          
          wget -q https://github.com/chmln/sd/releases/download/v1.0.0/sd-v1.0.0-x86_64-unknown-linux-musl.tar.gz -O sd.tar.gz
          tar -xvf sd.tar.gz sd-v1.0.0-x86_64-unknown-linux-musl/sd
          mv sd.tar.gz sd-v1.0.0-x86_64-unknown-linux-musl/sd ~/.cargo/bin
          rm -rf sd-v1.0.0-x86_64-unknown-linux-musl
          rm -f sd.tar.gz
          
          cargo install create_broken_files minimizer

      - name: Install ruff and red knot
        run: |
          #          git clone https://github.com/astral-sh/ruff.git ruff
          #          cd ruff
          #          sed -i '/\[profile.release\]/a overflow-checks = true' Cargo.toml
          #          sed -i '/\[profile.release\]/a debug-assertions = true' Cargo.toml
          #          sed -i '/\[profile.release\]/a debug = true' Cargo.toml
          #          sd "MAX_ITERATIONS: usize = 100;" "MAX_ITERATIONS: usize = 500;" crates/ruff_linter/src/linter.rs
          #          rm rust-toolchain.toml
          #          cargo install --path .
          #          cd ..

          wget -q https://github.com/qarmin/Automated-Fuzzer/releases/download/Nightly/red_knot.7z -O red_knot.7z
          7z x red_knot.7z
          mkdir -p ~/.cargo/bin
          mv red_knot ~/.cargo/bin
          rm red_knot.7z
          
          ls -al
          
          cargo install --path test_red_knot

      - name: Prepare files
        run: |
          mkdir -p input
          mkdir -p broken
          mkdir -p test1
          mkdir -p test2
          
          cd input
          python3 "../download_helper.py" "FILES_999.zip"
          cd ..

      - name: Run fuzzer
        run: |
          test_red_knot ${{ matrix.timeout }}

      - name: Store results
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: ignore
          name: ${{ matrix.name }}
          path: broken

      - name: Exit when found broken files
        run: |
          [ "$(ls -A broken)" ] && exit 1 || true